業務はシステムと手作業を合わせたもの。
ソフトウェアライフサイクルは企画、要件定義、開発、運用、保守から構成される。
システム要件は業務用県の中でシステムで実現する役割のこと
システム要件定義はシステムに必要な機能や性能
ソフトウェア要件定義はシステム要件の中のソフトウェアの要件
品質特性はソフトウェアの品質の評価基準で、機能性、信頼性、効率性、保守性、移植性がある。
システム要件定義プロセスではシステム要件定義書を作成して共同レビューをする

システム設計

システム方式設計はシステム要件定義の要件を、ハードウェアとソフトウェアと手作業に分けることで何がいくつ必要か明確にすること。
ソフトウェア要件定義はシステム方式設計でソフトウェアに割り当てられた要件を具体化すること（インターフェースとデータ）
ソフトウェア方式設計はソフトウェア要件定義で決めた機能や性能をプログラムの単位まで分割する工程。
ソフトウェア詳細設計はソフトウェア方式設計でプログラムまで分割した要件をコーディングができるまで分割する。フローチャートを作る。これで分割された
プログラムをソフトウェアユニットという（ソフトウェア単体）
システム要件定義から後の、システム方式設計、ソフトウェア要件定義、ソフトウェア方式設計、ソフトウェア詳細設計の４つをシステム設計という。

外部設計はユーザーから見える部分のシステム要件定義とシステム設計のシステム方式設計
内部設計はユーザーから見えないシステム設計のソフトウェア要件定義とソフトウェア方式設計
機械語に変換する機能をコンパイラという
プログラミングはソフトウェア詳細設計の後に行う。

テストでは要件定義での業務用県がちゃんとあるかも確認する。
インターフェースとはつなぐもののこと
結合テストではプログラム同士のインターフェースが合うかテストする。これをソフトウェアインターフェースという。
システムテストはシステム要件をテストする。
運用テストは業務要件を本番環境でユーザーにテストしてもらう。
単体テストではホワイトボックステストで処理の中身を確認するが、結合テストとシステムテストではブラックボックステストで中身は関係なく結果だけを見る。
ホワイトボックステストはプログラマの誤解のバグは見つけられなく、ブラックボックステストではすべてテストしないので発生頻度が低いバグが起きる可能性がある。
デバックはバグを修正すること
回帰テストはシステムなどを追加したことで別のところでバグが出ていないか確認すること
ソフトウェア受け入れはソフトウェアを実際に納品すること
ソフトウェア導入は本番環境にソフトウェアをインストールすることで今のシステムから切り替える場合は移行をする。
ソフトウェア受入テストは開発者が手助けしながら発注者が行う。利用者マニュアルを使って教える。
ソフトウェア保守は本番稼働中のソフトウェアを修正改良すること。
ファンクションポイント法はシステムに点数をつけて開発費用を見積もること。
ウォーターフォールモデルは開発プロセスを上流から下流に一直線に進める方法で、計画が立てやすいが、修正作業が大変
アジャイル開発は開発とリリースを短期間で行うことで開発中に変わったりするニーズに柔軟に対応する。しかし大きなプロジェクトには向いていない。
DevOｐｓは開発担当と運用担当が協力すること。（開発がよいものを作るために機能を追加すると安定した運用が難しくなるため）
ＸＰはアジャイル開発のプラクティスが定義された開発手法
テスト駆動開発は単体テストを先に作ってそこに通るように開発すること。
リファクタリングはプログラムの機能は変えずにコードを整理すること。
オブジェクト指向はソフトウェアを部品化して再利用しやすくして開発を効率化すること
ＥＵＣはエンドユーザー（ユーザー）が主体的に開発や運用にかかわること
ＲＡＤは少人数で短い時間で開発すること
リバースエンジニアリングは、既存のプログラムを分析して使用などを分析する技術
フォワードエンジニアリングは従来の工程で開発するのを
スクラムはアジャイル開発の１つで団結するためのもの
プロジェクトはモノやサービスを作る作業で、条件は有期性と独自性
プロジェクトマネジメントは作業範囲（スコープ）、期限（スケジュール）、費用（コスト）を調整すること
ＰＭＢＯＫはプロジェクトマネージャーの教科書
ＰＭＢＯＫの内容をまとめたものをＰＭＢＯＫガイドという
ＰＭＢＯＫではまずプロジェクト憲章というプロジェクトの目的などを創始者やスポンサーが決め、そこでＰＭが決まる。
プロジェクトスコープマネジメントはプロジェクトに必要な作業を抽出すること。でＷＢＳを作成する。
ＷＢＳはプロジェクトを時間やコストを見積もれるまで分割する。
ＷＢＳのもっとも細かい作業をワークパッケージで、８～８０時間ほど。
プロジェクトステークホルダマネジメントはステークホルダがプロジェクトに参加できるようにすること。
プロジェクトスケジュールマネジメントではガントチャートとアローダイアグラムを使う。
ガントチャートは、タスクごとに予定と実績を記入する表。
アローダイアグラムは作業の流れを矢印で表した図で、最も時間のかかる経路が分かる
アローダイアグラムを使った分析手法をＰＥＲＴという。
ダミー作業は所要日数が０の作業で、これができないと作業が開始できないと表現できる。
クリティカルパスは最も時間のかかる経路
プロジェクト資源マネジメントはプロジェクトメンバー全員が各自の役割と責任を把握し、参加時期を明確にする。
伝達経路の計算は全部を線でつないで見る
組み合わせの計算
プロジェクトリスク管理はリスク回避（リスクに関わらない）、リスク転嫁（リスクを移すことリスクがある業務を外部委託するなど）、
リスク軽減（発生率や被害額を小さくする）、リスク受容（対策費用の方が高い場合）
